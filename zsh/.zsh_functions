#functions
sa()
{
    search_string="$@"
    alias-finder $search_string
}
sal()
{
    search_string="$@"
    alias-finder -l $search_string
}
dceb()
{
    docker-compose exec "$1" bash
}
da()
{
    docker attach "$1"
}
cps()
{ 
    python3 -m py_compile "$1"
}
ank()
{
    sudo apt-key add "$1"
}
cpfn()
{
	echo -n "$1" | xclip -selection clipboard
}
ndwmp()
{
    patch -p1 < "$1"
}
lwnn()
{
    nmcli device wifi list
}
cewn()
{
    nmcli con up "$1"
}
cwn()
{
    nmcli --ask device wifi connect "$1"
}
sfip()
{
    apt-file search "$1"
}
ipy()
{
    sudo apt install --yes "$1"
}
gpi()
{
    pidof "$1"
}
kpi()
{
    sudo kill -s SIGINT $(gpi "$1")
}
pdf()
{
    mupdf "$1"
}
gdcid()
{
    docker inspect --format="{{.Id}}" "$1" 
}
gdcip()
{
    docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(gdcid "$1")
}
cnvpn()
{
   nordvpn connect "$1"
}
gpl()
{
   sudo dpkg-query -f '${binary:Package}\n' -W > $HOME/packages_list
}
omof()
{
   libreoffice "$1" > /dev/null 2>&1 & \
   disown
}
sgdurl()
{
   rclone sync -i gd:"UNIVERSIDAD NACIONAL/NOVENA MATRICULA/$1" $2
}
sgdulr()
{
   rclone sync -i $1 gd:"UNIVERSIDAD NACIONAL/NOVENA MATRICULA/$2"
}
sgdpdrl()
{
   rclone sync -i gdd:"$1" "$2"
}
sgdpdlr()
{
   rclone sync -i "$1" gdd:"$2"
}
cirb()
{
   rclone copy gd:"PROYECTO IDEA/Docker/desarrollo local/bodega-datos/backups/$1.sql" "$2"
}
dirm()
{
   docker image rm $1
}
dcrrm()
{
  docker container rm $1
}
sih()
{
  search_string="$@"
  h | grep $search_string
}
fal()
{
  fdfind "$1" -X batcat
}
n ()
{
    # Block nesting of nnn in subshells
    if [ -n $NNNLVL ] && [ "${NNNLVL:-0}" -ge 1 ]; then
        echo "nnn is already running"
        return
    fi

    # The behaviour is set to cd on quit (nnn checks if NNN_TMPFILE is set)
    # To cd on quit only on ^G, either remove the "export" as in:
    #    NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
    #    (or, to a custom path: NNN_TMPFILE=/tmp/.lastd)
    # or, export NNN_TMPFILE after nnn invocation
    export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

    # Unmask ^Q (, ^V etc.) (if required, see `stty -a`) to Quit nnn
    # stty start undef
    # stty stop undef
    # stty lwrap undef
    # stty lnext undef

    nnn -H "$@"

    if [ -f "$NNN_TMPFILE" ]; then
            . "$NNN_TMPFILE"
            rm -f "$NNN_TMPFILE" > /dev/null
    fi
}

toggle-theme() {
	current_theme=$(awk '$1=="include" {print $2}' "$HOME/.config/kitty/kitty.conf")
	new_theme="rose-pine.conf"

	if [ "$current_theme" = "rose-pine.conf" ]; then
		new_theme="rose-pine-dawn.conf"
	fi

	# Set theme for active sessions. Requires `allow_remote_control yes`
	kitty @ set-colors --all --configured "~/.config/kitty/$new_theme"

	# Update config for persistence
	sed -i '' -e "s/include.*/include $new_theme/" "$HOME/.config/kitty/kitty.conf"
}

rgp() {
  rg "$1" --color always | devicon-lookup --color --prefix : "${@:2}"
}

rgps() {
  rg "$1" --color always | devicon-lookup -c -p : | fzf --ansi
}


